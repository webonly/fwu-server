<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.1.xsd
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop-4.1.xsd 
        http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx-4.1.xsd ">
        
    <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
     <context:component-scan base-package="com.techsun.famouswine.controller" />

    <!-- 使用 mvc:annotation-driven代替上边注解映射器和注解适配器配置
             mvc:annotation-driven默认加载很多的参数绑定方法，比如json转换解析器就默认加载了，
                                  如果使用mvc:annotation-driven不用配置上边的RequestMappingHandlerMapping和RequestMappingHandlerAdapter
                                  实际开发时使用mvc:annotation-driven -->
    
    
    
    <mvc:interceptors >    
    <mvc:interceptor >    
        <!-- 匹配的是url路径， 如果不配置或/**,将拦截所有的Controller -->  
        <mvc:mapping path="/**" />  
        <mvc:mapping path="/user/**" />
        <mvc:exclude-mapping path="/user/login.do"/>
        <mvc:exclude-mapping path="/user/register.do"/>
        <bean class="com.techsun.famouswine.util.AllInterceptor"></bean>    
    	</mvc:interceptor>  
    	<!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->  
		</mvc:interceptors>  
		
		<mvc:annotation-driven />

        <!-- 静态资源解析包括 ：js、css、img、.. -->
     <mvc:resources location="/js/" mapping="/js/**"/>
     <mvc:resources location="/img/" mapping="/img/**"/>

     <!-- 定义跳转的文件的前后缀 ，视图模式配置-->
     <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" >
         <!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和 后缀，变成一个 可用的url地址 -->
         <!-- 配置jsp路径的前缀 -->
         <property name="prefix" value="/" />
         <!-- 配置jsp路径的后缀 -->
         <property name="suffix" value=".jsp" />
     </bean>

     <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件 中也不必引入上传组件包 -->
     <bean id="multipartResolver"
         class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
         <!-- 默认编码 -->
         <property name="defaultEncoding" value="utf-8" />
         <!-- 文件大小最大值 -->
         <property name="maxUploadSize" value="10485760000" />
         <!-- 内存中的最大值 -->
         <property name="maxInMemorySize" value="40960" />
     </bean>
   	
	 
</beans>